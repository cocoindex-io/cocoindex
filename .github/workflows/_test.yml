name: Run Tests

on:
    workflow_call:

env:
  CARGO_TERM_COLOR: always

jobs:
    build-test:
        strategy:
            matrix:
                python-version: [3.11]
                runner: [ubuntu-latest, ubuntu-24.04-arm, macos-latest, macos-13, windows-latest]
        runs-on: ${{ matrix.runner }}
        steps:
        - uses: actions/checkout@v4

        - uses: actions/setup-python@v5
          id: setup_python
          with:
            python-version: ${{ matrix.python-version }}
            cache: 'pip'

        - run: rustup toolchain install stable --profile minimal
        - name: Rust Cache
          uses: Swatinem/rust-cache@v2
          with:
            key: rust-${{ matrix.runner }}-${{ matrix.python-version }}
        - name: Rust build
          run: cargo build --verbose
        - name: Rust tests
          run: cargo test --verbose

        - uses: actions/cache@v4
          with:
            path: .venv
            key: pyenv-${{ matrix.runner }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('pyproject.toml') }}
            restore-keys: |
              pyenv-${{ matrix.runner }}-${{ steps.setup_python.outputs.python-version }}-
        - name: Setup venv
          run: |
            python -m venv .venv

        - name: Install Python toolchains
          if: runner.os != 'Windows'
          run: |
            .venv/bin/python -m pip install maturin mypy pytest pytest-asyncio
        - name: Install Python toolchains (Windows)
          if: runner.os == 'Windows'
          run: |
            .venv\Scripts\python -m pip install maturin mypy pytest pytest-asyncio

        - name: Python build
          if: runner.os != 'Windows'
          run: |
            .venv/bin/python -m maturin develop -E all
        - name: Python build (Windows)
          if: runner.os == 'Windows'
          run: |
            .venv\Scripts\python -m maturin develop -E all

        - name: Python type check (mypy)
          if: runner.os != 'Windows'
          run: |
            .venv/bin/python -m mypy python
        - name: Python type check (mypy) (Windows)
          if: runner.os == 'Windows'
          run: |
            .venv\Scripts\python -m mypy python

        - name: Python tests
          if: runner.os != 'Windows'
          run: |
            .venv/bin/python -m pytest python/cocoindex/tests
        - name: Python tests (Windows)
          if: runner.os == 'Windows'
          run: |
            .venv\Scripts\python -m pytest python/cocoindex/tests